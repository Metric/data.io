var events=require("events"),async=require("async"),Socket=function(){this.ws=null,this.emitter=new events.EventEmitter,this.init.apply(this,arguments)};Socket.prototype.init=function(t){var e=this;return this.ws=t,this.connected=!0,this.ws&&(this.ws.on("message",function(t){e.handleMessage(t)}),this.ws.on("close",function(){e.connected=!1,e.broadcast("close")}),this.ws.on("error",function(t){e.connected=!1,e.broadcast("error",t)})),this},Socket.prototype.handleMessage=function(t){var e=JSON.parse(t);return this.broadcast(e.name,e.data),this},Socket.prototype.broadcast=function(t,e){var n=[t];return n=n.concat(e),this.emitter.emit.apply(this.emitter,n),this},Socket.prototype.on=function(t,e){return this.emitter.on(t,e),this},Socket.prototype.once=function(t,e){return this.emitter.once(t,e),this},Socket.prototype.close=function(){return this.ws&&this.ws.close(),this},Socket.prototype.removeListener=function(t,e){return t&&e&&this.emitter.removeListener(t,e),this},Socket.prototype.emit=function(t){var e=this,n=[];arguments.length>1&&(n=Array.prototype.slice.call(arguments,1,arguments.length));var s={name:t,data:n};return this.ws&&this.ws.send(JSON.stringify(s),function(t){t&&e.emitter.emit("error",t)}),this},module.exports=exports=Socket;